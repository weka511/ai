#!wing
#!version=8.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': ['.gitignore',
                                     'selforgLorentz.png',
                                     'selforgRossler.png',
                                     'LICENSE',
                                     'ActiveInference.bib'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.launch-config = {loc('selforg.py'): ('project',
        (' Lorentz --show --burnin 0',
         ''))}
[user attributes]
debug.recent-run-args = {loc('selforg.py'): [' Lorentz --show --burnin 0',
        ' Lorentz --show',
        ' Rossler --coupling 0.5 --show',
        ' Lorentz --show --tFinal 100',
        ' Lorentz --show --tFinal 10',
        '--help Lorentz --show',
        'Lorentz --show',
        'Lorentz']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(3,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../dynamics/chaos_book/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../learn/README.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('../learn/bayes1.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('../learn/bayes1.py'),
        'alphas')]},
        loc('../learn/cavi1.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('../learn/cavi1.py'),
        'ys')]],
                                   'top-node': [('generic attribute',
        loc('../learn/cavi1.py'),
        'ax1')]},
        loc('../learn/fashion.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('generic attribute',
        loc('../learn/fashion.py'),
        '_')]],
                                     'top-node': [('generic attribute',
        loc('../learn/fashion.py'),
        'class_names')]},
        loc('../learn/fcs.py'): {'expanded-nodes': [],
                                 'selected-nodes': [None],
                                 'top-node': None},
        loc('../learn/fcs/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../learn/fcs/fcs.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../learn/fcs/fcs.py'),
        'args')]},
        loc('../learn/fcs/gcps.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../learn/fcs/gcps.py'),
        'a')]},
        loc('../learn/fcs/partition.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../learn/fcs/partition.py'),
                      'args')]},
        loc('../learn/fcs/plotreds.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../learn/fcs/plotreds.py'),
                      'args')]},
        loc('../learn/flowers.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('generic attribute',
        loc('../learn/flowers.py'),
        '_')]],
                                     'top-node': [('generic attribute',
        loc('../learn/flowers.py'),
        'args')]},
        loc('../learn/train.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('../learn/train.py'),
        '_')]],
                                   'top-node': [('generic attribute',
        loc('../learn/train.py'),
        'alpha')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'color',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': "'",
                                       'fReverse': True,
                                       'fSearchText': '"',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': True,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['list(range(16))\n',
        'list(range(0,12,3))\n',
        'A=a,rray([1,2,3,4])\n',
        'A=array([1,2,3,4])\n',
        'A\n',
        'A[0]\n',
        'A[0,:,2]\n',
        'A[0::2]\n',
        'average(A[0::2])\n',
        'from numpy import mean\n',
        'mean(A[0::2])\n',
        '2**-16\n',
        "'zyz'[0]\n",
        "'xyz'[0]\n",
        'from numpy import array\n',
        't = array([1,2,3,4])\n',
        't.shape\n',
        't.shape[0]\n',
        '1/2**3\n',
        '1/2**4\n',
        '1/2**0\n']},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('sde.py'),
        {'attrib-starts': [],
         'code-line': 'from numpy import \r\n',
         'first-line': 48,
         'folded-linenos': [],
         'sel-line': 4,
         'sel-line-start': 126,
         'selection_end': 144,
         'selection_start': 144,
         'zoom': 0},
        1665864979.0348449],
        [loc('sde.py'),
         {'attrib-starts': [('run_simulation|0|',
                             35)],
          'code-line': '    TS = arange(T_INIT, T_END + DT, DT)\r\n',
          'first-line': 26,
          'folded-linenos': [],
          'sel-line': 43,
          'sel-line-start': 983,
          'selection_end': 992,
          'selection_start': 992,
          'zoom': 0},
         1665865043.090974],
        [loc('sde.py'),
         {'attrib-starts': [('run_simulation|0|',
                             35)],
          'code-line': '    ys = zeros(N + 1)\r\n',
          'first-line': 39,
          'folded-linenos': [],
          'sel-line': 47,
          'sel-line-start': 1052,
          'selection_end': 1061,
          'selection_start': 1061,
          'zoom': 0},
         1665865076.6103806],
        [loc('sde.py'),
         {'attrib-starts': [('dW|0|',
                             29)],
          'code-line': '    return normal(loc=0.0, scale=sqrt(delta_t))\r\n',
          'first-line': 21,
          'folded-linenos': [],
          'sel-line': 33,
          'sel-line-start': 733,
          'selection_end': 744,
          'selection_start': 744,
          'zoom': 0},
         1665865131.1019173],
        [loc('sde.py'),
         {'attrib-starts': [('dW|0|',
                             29)],
          'code-line': '    return normal(loc=0.0, scale=sqrt(delta_t))\r\n',
          'first-line': 45,
          'folded-linenos': [],
          'sel-line': 33,
          'sel-line-start': 733,
          'selection_end': 744,
          'selection_start': 744,
          'zoom': 0},
         1665865142.2331889],
        [loc('sde.py'),
         {'attrib-starts': [],
          'code-line': 'from matplotlib.pyplot import figure, show\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 5,
          'sel-line-start': 128,
          'selection_end': 170,
          'selection_start': 170,
          'zoom': 0},
         1665865191.4823253],
        [loc('sde.py'),
         {'attrib-starts': [('plot_simulations|0|',
                             57)],
          'code-line': '    ax.set_ylabel("y")\r\n',
          'first-line': 56,
          'folded-linenos': [],
          'sel-line': 68,
          'sel-line-start': 1550,
          'selection_end': 1561,
          'selection_start': 1561,
          'zoom': 0},
         1665865302.3712935],
        [loc('sde.py'),
         {'attrib-starts': [('Model|0|',
                             10)],
          'code-line': "    '''\r\n",
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 11,
          'sel-line-start': 279,
          'selection_end': 280,
          'selection_start': 280,
          'zoom': 0},
         1665865348.431207],
        [loc('sde.py'),
         {'attrib-starts': [('Model|0|',
                             10)],
          'code-line': "    '''\r\n",
          'first-line': 66,
          'folded-linenos': [],
          'sel-line': 11,
          'sel-line-start': 279,
          'selection_end': 280,
          'selection_start': 280,
          'zoom': 0},
         1665865372.327096],
        [loc('sde.py'),
         {'attrib-starts': [],
          'code-line': '# I have made typographical changes to confirm to the style of my other code\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 8,
          'sel-line-start': 416,
          'selection_end': 492,
          'selection_start': 492,
          'zoom': 0},
         1665866639.7444842],
        [loc('sde.py'),
         {'attrib-starts': [],
          'code-line': '    show()\r\n',
          'first-line': 60,
          'folded-linenos': [],
          'sel-line': 81,
          'sel-line-start': 2055,
          'selection_end': 2065,
          'selection_start': 2065,
          'zoom': 0},
         1665866668.5704105],
        [loc('sde.py'),
         {'attrib-starts': [],
          'code-line': '    show()\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 81,
          'sel-line-start': 2055,
          'selection_end': 2065,
          'selection_start': 2065,
          'zoom': 0},
         1665866696.082551],
        [loc('sde.py'),
         {'attrib-starts': [],
          'code-line': '    NUM_SIMS = 5\r\n',
          'first-line': 73,
          'folded-linenos': [],
          'sel-line': 79,
          'sel-line-start': 2005,
          'selection_end': 2021,
          'selection_start': 2021,
          'zoom': 0},
         1665866752.4434712],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': 'sde.py|\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 10,
          'sel-line-start': 464,
          'selection_end': 471,
          'selection_start': 471,
          'zoom': 0},
         1665866778.898508],
        [loc('sde.py'),
         {'attrib-starts': [],
          'code-line': '    NUM_SIMS = 5\r\n',
          'first-line': 73,
          'folded-linenos': [],
          'sel-line': 79,
          'sel-line-start': 2005,
          'selection_end': 2021,
          'selection_start': 2021,
          'zoom': 0},
         1665866780.5345376],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': 'sde.py|\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 10,
          'sel-line-start': 464,
          'selection_end': 471,
          'selection_start': 471,
          'zoom': 0},
         1665866792.3185399],
        [loc('sde.py'),
         {'attrib-starts': [],
          'code-line': '    NUM_SIMS = 5\r\n',
          'first-line': 73,
          'folded-linenos': [],
          'sel-line': 79,
          'sel-line-start': 2005,
          'selection_end': 2021,
          'selection_start': 2021,
          'zoom': 0},
         1665866797.8765428],
        [loc('sde.py'),
         {'attrib-starts': [],
          'code-line': "'''Euler–Maruyama method'''\r\n",
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 10,
          'sel-line-start': 496,
          'selection_end': 522,
          'selection_start': 499,
          'zoom': 0},
         1665866819.4972064],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': 'sde.py|Euler–Maruyama method\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 10,
          'sel-line-start': 464,
          'selection_end': 494,
          'selection_start': 494,
          'zoom': 0},
         1665866829.3573573],
        [loc('sde.py'),
         {'attrib-starts': [],
          'code-line': "'''Euler–Maruyama method'''\r\n",
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 10,
          'sel-line-start': 496,
          'selection_end': 522,
          'selection_start': 499,
          'zoom': 0},
         1665866830.2979774]],
        20),
        'current-loc': None,
        'editor-state-list': [],
        'has-focus': True,
        'locked': False},
        []),
                               'open_files': []},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           1),
                          1665865309.9096878),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1665808356.977954),
                 'user_data': {}},
        'window-alloc': (7,
                         1,
                         1360,
                         732)}]}
guimgr.recent-documents = [loc('euler.py')]
guimgr.visual-state = {loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        94),
        ('Artist|0|.update|0|',
         1045)],
        'code-line': '                        raise AttributeError(f"{type(self).__name__!r} object "\r\n',
        'first-line': 1044,
        'folded-linenos': [],
        'sel-line': 1063,
        'sel-line-start': 36297,
        'selection_end': 36297,
        'selection_start': 36297,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_process_plot_var_args|0|',
        211),
        ('_process_plot_var_args|0|._plot_args|0|',
         405)],
        'code-line': '            raise ValueError(f"x and y must have same first dimension, but "\r\n',
        'first-line': 478,
        'folded-linenos': [],
        'sel-line': 497,
        'sel-line-start': 19892,
        'selection_end': 19892,
        'selection_start': 19892,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/figure.py'): {'attrib-starts': [('FigureBase|0|',
        180),
        ('FigureBase|0|.add_subplot|0|',
         646)],
        'code-line': '            ax = subplot_class_factory(projection_class)(self, *args, **pkw)\r\n',
        'first-line': 760,
        'folded-linenos': [],
        'sel-line': 771,
        'sel-line-start': 28172,
        'selection_end': 28172,
        'selection_start': 28172,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/gridspec.py'): {'attrib-starts': [('SubplotSpec|0|',
        536),
        ('SubplotSpec|0|._from_subplot_args|0|',
         567)],
        'code-line': '                raise ValueError(\r\n',
        'first-line': 586,
        'folded-linenos': [],
        'sel-line': 605,
        'sel-line-start': 24410,
        'selection_end': 24410,
        'selection_start': 24410,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [('figure|0|',
        664)],
        'code-line': '        num = int(num)  # crude validation of num argument\r\n',
        'first-line': 753,
        'folded-linenos': [],
        'sel-line': 772,
        'sel-line-start': 26102,
        'selection_end': 26102,
        'selection_start': 26102,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/core/_methods.py'): {'attrib-starts': [('_count_reduce_items|0|',
        65)],
        'code-line': '            items *= arr.shape[mu.normalize_axis_index(ax, arr.ndim)]\r\n',
        'first-line': 56,
        'folded-linenos': [],
        'sel-line': 75,
        'sel-line-start': 2871,
        'selection_end': 2871,
        'selection_start': 2871,
        'zoom': 0},
                       loc('../dynamics/chaos_book/wk1/Rossler.py'): {'attrib-starts': [('Velocity|0|',
        14)],
        'code-line': '\r\n',
        'first-line': 30,
        'folded-linenos': [],
        'sel-line': 39,
        'sel-line-start': 1029,
        'selection_end': 1029,
        'selection_start': 1029,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'sde.py|Euler–Maruyama method\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 464,
        'selection_end': 494,
        'selection_start': 494,
        'zoom': 0},
                       loc('Rossler.py'): {'attrib-starts': [],
        'code-line': '    xt = sspSolution[:, 0]\r\n',
        'first-line': 49,
        'folded-linenos': [],
        'sel-line': 54,
        'sel-line-start': 1585,
        'selection_end': 1585,
        'selection_start': 1585,
        'zoom': 0},
                       loc('RungeKutta.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('compare.py'): {'attrib-starts': [],
        'code-line': 't = np.arange(0.0, 40.0, 0.001)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 494,
        'selection_end': 523,
        'selection_start': 523,
        'zoom': 0},
                       loc('euler.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 0,
        'zoom': 0},
                       loc('sde.py'): {'attrib-starts': [],
                                       'code-line': "'''Euler–Maruyama method'''\r\n",
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 10,
                                       'sel-line-start': 496,
                                       'selection_end': 522,
                                       'selection_start': 499,
                                       'zoom': 0},
                       loc('selforg.py'): {'attrib-starts': [],
        'code-line': 'if __name__ == "__main__":\r\n',
        'first-line': 99,
        'folded-linenos': [],
        'sel-line': 112,
        'sel-line-start': 4252,
        'selection_end': 4278,
        'selection_start': 4278,
        'zoom': 0}}
search.replace-history = ['dt',
                          'func',
                          't',
                          'y']
search.search-history = ['"',
                         'deltat',
                         'velocityFunction',
                         'timeArray',
                         'SolutionArray']
