#!wing
#!version=8.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': ['.gitignore',
                                     'selforgLorentz.png',
                                     'selforgRossler.png',
                                     'LICENSE',
                                     'ActiveInference.bib'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.launch-config = {loc('selforg.py'): ('project',
        ('Lorentz --show --burnin 320',
         ''))}
[user attributes]
debug.recent-run-args = {loc('selforg.py'): ['Lorentz --show --burnin 320',
        'Lorentz --show --burnin 32',
        'Lorentz --show',
        ' Rossler --show --burnin 25 --N 16 --coupling 1 --sigma 0 ',
        ' Rossler --show --burnin 0 --N 16 --coupling 1 --sigma 0 ',
        ' Rossler --show --burnin 0 --N 16 --coupling 0 --sigma 0 ',
        ' Rossler --show --burnin 0 --N 1 --coupling 0 --sigma 0 ',
        ' Lorentz --show --burnin 0 --N 1 --coupling 0 --sigma 0 ',
        ' Lorentz --show --burnin 0',
        ' Lorentz --show',
        ' Rossler --coupling 0.5 --show',
        ' Lorentz --show --tFinal 100',
        ' Lorentz --show --tFinal 10',
        '--help Lorentz --show',
        'Lorentz']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2557280118255728,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(2,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../dynamics/chaos_book/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../learn/README.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('../learn/bayes1.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('../learn/bayes1.py'),
        'alphas')]},
        loc('../learn/cavi1.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('../learn/cavi1.py'),
        'ys')]],
                                   'top-node': [('generic attribute',
        loc('../learn/cavi1.py'),
        'ax1')]},
        loc('../learn/fashion.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('generic attribute',
        loc('../learn/fashion.py'),
        '_')]],
                                     'top-node': [('generic attribute',
        loc('../learn/fashion.py'),
        'class_names')]},
        loc('../learn/fcs.py'): {'expanded-nodes': [],
                                 'selected-nodes': [None],
                                 'top-node': None},
        loc('../learn/fcs/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../learn/fcs/fcs.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../learn/fcs/fcs.py'),
        'args')]},
        loc('../learn/fcs/gcps.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../learn/fcs/gcps.py'),
        'a')]},
        loc('../learn/fcs/partition.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../learn/fcs/partition.py'),
                      'args')]},
        loc('../learn/fcs/plotreds.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../learn/fcs/plotreds.py'),
                      'args')]},
        loc('../learn/flowers.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('generic attribute',
        loc('../learn/flowers.py'),
        '_')]],
                                     'top-node': [('generic attribute',
        loc('../learn/flowers.py'),
        'args')]},
        loc('../learn/train.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('../learn/train.py'),
        '_')]],
                                   'top-node': [('generic attribute',
        loc('../learn/train.py'),
        'alpha')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'color',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': "'",
                                       'fReverse': True,
                                       'fSearchText': '"',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': True,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['list(range(16))\n',
        'list(range(0,12,3))\n',
        'A=a,rray([1,2,3,4])\n',
        'A=array([1,2,3,4])\n',
        'A\n',
        'A[0]\n',
        'A[0,:,2]\n',
        'A[0::2]\n',
        'average(A[0::2])\n',
        'from numpy import mean\n',
        'mean(A[0::2])\n',
        '2**-16\n',
        "'zyz'[0]\n",
        "'xyz'[0]\n",
        'from numpy import array\n',
        't = array([1,2,3,4])\n',
        't.shape\n',
        't.shape[0]\n',
        '1/2**3\n',
        '1/2**4\n',
        '1/2**0\n']},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('sde.py'),
        {'attrib-starts': [('Wiener|0|',
                            25),
                           ('Wiener|0|.dW|0|',
                            34)],
         'code-line': '                               loc   = 0.0,\r\n',
         'first-line': 32,
         'folded-linenos': [],
         'sel-line': 36,
         'sel-line-start': 1267,
         'selection_end': 1271,
         'selection_start': 1271,
         'zoom': 0},
        1665954958.5047529],
        [loc('selforg.py'),
         {'attrib-starts': [],
          'code-line': '                             wiener  = Wiener(rng))\r\n',
          'first-line': 105,
          'folded-linenos': [],
          'sel-line': 124,
          'sel-line-start': 4839,
          'selection_end': 4854,
          'selection_start': 4854,
          'zoom': 0},
         1665954985.5982764],
        [loc('sde.py'),
         {'attrib-starts': [('Wiener|0|',
                             25),
                            ('Wiener|0|.dW|0|',
                             34)],
          'code-line': '        return self.rng.normal(size  = self.d,\r\n',
          'first-line': 24,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 1219,
          'selection_end': 1219,
          'selection_start': 1219,
          'zoom': 0},
         1665955017.3305333],
        [loc('selforg.py'),
         {'attrib-starts': [],
          'code-line': '                             wiener  = Wiener(rng))\r\n',
          'first-line': 105,
          'folded-linenos': [],
          'sel-line': 124,
          'sel-line-start': 4839,
          'selection_end': 4884,
          'selection_start': 4878,
          'zoom': 0},
         1665955073.3452027],
        [loc('sde.py'),
         {'attrib-starts': [],
          'code-line': 'class Wiener:\r\n',
          'first-line': 26,
          'folded-linenos': [],
          'sel-line': 25,
          'sel-line-start': 974,
          'selection_end': 986,
          'selection_start': 980,
          'zoom': 0},
         1665955097.6067233],
        [loc('selforg.py'),
         {'attrib-starts': [],
          'code-line': '                             wiener  = Wiener(rng))\r\n',
          'first-line': 105,
          'folded-linenos': [],
          'sel-line': 124,
          'sel-line-start': 4839,
          'selection_end': 4884,
          'selection_start': 4878,
          'zoom': 0},
         1665955161.7888517],
        [loc('sde.py'),
         {'attrib-starts': [('EulerMaruyama|0|',
                             38),
                            ('EulerMaruyama|0|.solve|0|',
                             41)],
          'code-line': '            y[i + 1] = y[i] + a(y[i], t[i]) * dt + b(y[i], t[i]) * wiener.dW(dt)\r\n',
          'first-line': 32,
          'folded-linenos': [],
          'sel-line': 49,
          'sel-line-start': 1784,
          'selection_end': 1784,
          'selection_start': 1784,
          'zoom': 0},
         1665955214.2242699],
        [loc('selforg.py'),
         {'attrib-starts': [],
          'code-line': '                             wiener  = Wiener(rng))\r\n',
          'first-line': 105,
          'folded-linenos': [],
          'sel-line': 124,
          'sel-line-start': 4839,
          'selection_end': 4884,
          'selection_start': 4878,
          'zoom': 0},
         1665955232.5864255],
        [loc('sde.py'),
         {'attrib-starts': [],
          'code-line': 'class Wiener:\r\n',
          'first-line': 14,
          'folded-linenos': [],
          'sel-line': 25,
          'sel-line-start': 974,
          'selection_end': 986,
          'selection_start': 980,
          'zoom': 0},
         1665955246.2854352],
        [loc('selforg.py'),
         {'attrib-starts': [],
          'code-line': '    y         = solver.solve(population.Velocity, rng.normal(30,8,oscillator.d*args.N), t,\r\n',
          'first-line': 105,
          'folded-linenos': [],
          'sel-line': 122,
          'sel-line-start': 4667,
          'selection_end': 4667,
          'selection_start': 4667,
          'zoom': 0},
         1665955298.2718904],
        [loc('sde.py'),
         {'attrib-starts': [],
          'code-line': 'class Wiener:\r\n',
          'first-line': 14,
          'folded-linenos': [],
          'sel-line': 25,
          'sel-line-start': 974,
          'selection_end': 986,
          'selection_start': 980,
          'zoom': 0},
         1665955305.7433388],
        [loc('selforg.py'),
         {'attrib-starts': [],
          'code-line': '                                              d   = d))\r\n',
          'first-line': 126,
          'folded-linenos': [],
          'sel-line': 126,
          'sel-line-start': 4917,
          'selection_end': 4969,
          'selection_start': 4969,
          'zoom': 0},
         1665955443.2997558],
        [loc('sde.py'),
         {'attrib-starts': [('EulerMaruyama|0|',
                             39),
                            ('EulerMaruyama|0|.solve|0|',
                             42)],
          'code-line': '        return y\r\n',
          'first-line': 80,
          'folded-linenos': [],
          'sel-line': 52,
          'sel-line-start': 1918,
          'selection_end': 1934,
          'selection_start': 1934,
          'zoom': 0},
         1665955485.2905834],
        [loc('sde.py'),
         {'attrib-starts': [('EulerMaruyama|0|',
                             39),
                            ('EulerMaruyama|0|.solve|0|',
                             42)],
          'code-line': '        return y\r\n',
          'first-line': 35,
          'folded-linenos': [],
          'sel-line': 52,
          'sel-line-start': 1918,
          'selection_end': 1934,
          'selection_start': 1934,
          'zoom': 0},
         1665955485.583923],
        [loc('selforg.py'),
         {'attrib-starts': [],
          'code-line': '    y0         = rng.normal(30,8,oscillator.d*args.N)\r\n',
          'first-line': 111,
          'folded-linenos': [],
          'sel-line': 117,
          'sel-line-start': 4380,
          'selection_end': 4386,
          'selection_start': 4386,
          'zoom': 0},
         1665955549.784108],
        [loc('selforg.py'),
         {'attrib-starts': [],
          'code-line': "            ax.set_xlabel('t')\r\n",
          'first-line': 135,
          'folded-linenos': [],
          'sel-line': 136,
          'sel-line-start': 5326,
          'selection_end': 5356,
          'selection_start': 5356,
          'zoom': 0},
         1665955557.7917974],
        [loc('selforg.py'),
         {'attrib-starts': [('parse_args|0|',
                             97)],
          'code-line': "    parser.add_argument('--coupling', type    = float, default = 2.0)\r\n",
          'first-line': 98,
          'folded-linenos': [],
          'sel-line': 104,
          'sel-line-start': 3747,
          'selection_end': 3816,
          'selection_start': 3816,
          'zoom': 0},
         1665955612.9344878],
        [loc('selforg.py'),
         {'attrib-starts': [],
          'code-line': '    ax.plot(mean( y[args.burnin:,0::oscillator.d],axis=1),\r\n',
          'first-line': 133,
          'folded-linenos': [],
          'sel-line': 140,
          'sel-line-start': 5461,
          'selection_end': 5473,
          'selection_start': 5473,
          'zoom': 0},
         1665955709.7480059],
        [loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/axes/_base.py'),
         {'attrib-starts': [('_process_plot_var_args|0|',
                             211),
                            ('_process_plot_var_args|0|._plot_args|0|',
                             405)],
          'code-line': '            raise ValueError(f"x and y must have same first dimension, but "\r\n',
          'first-line': 478,
          'folded-linenos': [],
          'sel-line': 497,
          'sel-line-start': 19892,
          'selection_end': 19892,
          'selection_start': 19892,
          'zoom': 0},
         1665955715.2951524],
        [loc('selforg.py'),
         {'attrib-starts': [],
          'code-line': "            ax.plot(t[args.burnin:],y[args.burnin:,j],linestyle='dotted')\r\n",
          'first-line': 98,
          'folded-linenos': [],
          'sel-line': 135,
          'sel-line-start': 5276,
          'selection_end': 5325,
          'selection_start': 5325,
          'zoom': 0},
         1665955853.8033264]],
        20),
        'current-loc': loc('selforg.py'),
        'editor-state-list': [(loc('euler.py'),
                               {'attrib-starts': [],
                                'code-line': '    ax.plot(tArray, xSolution)\r\n',
                                'first-line': 47,
                                'folded-linenos': [],
                                'sel-line': 67,
                                'sel-line-start': 2047,
                                'selection_end': 2064,
                                'selection_start': 2064,
                                'zoom': 0}),
                              (loc('sde.py'),
                               {'attrib-starts': [('EulerMaruyama|0|',
        39),
        ('EulerMaruyama|0|.solve|0|',
         42)],
                                'code-line': '        return y\r\n',
                                'first-line': 80,
                                'folded-linenos': [],
                                'sel-line': 52,
                                'sel-line-start': 1918,
                                'selection_end': 1934,
                                'selection_start': 1934,
                                'zoom': 0}),
                              (loc('selforg.py'),
                               {'attrib-starts': [],
                                'code-line': '    ax.plot(mean( y[args.burnin:,0::oscillator.d],axis=1),\r\n',
                                'first-line': 127,
                                'folded-linenos': [],
                                'sel-line': 140,
                                'sel-line-start': 5473,
                                'selection_end': 5491,
                                'selection_start': 5491,
                                'zoom': 0}),
                              (loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/axes/_base.py'),
                               {'attrib-starts': [('_process_plot_var_args|0|',
        211),
        ('_process_plot_var_args|0|._plot_args|0|',
         405)],
                                'code-line': '            raise ValueError(f"x and y must have same first dimension, but "\r\n',
                                'first-line': 478,
                                'folded-linenos': [],
                                'sel-line': 497,
                                'sel-line-start': 19892,
                                'selection_end': 19892,
                                'selection_start': 19892,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('euler.py'),
         loc('sde.py'),
         loc('selforg.py'),
         loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/axes/_base.py')]),
                               'open_files': ['euler.py',
        'sde.py',
        'selforg.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1665955772.3786964),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    2),
                                   1665954982.826902),
                 'user_data': {}},
        'window-alloc': (7,
                         1,
                         1360,
                         732)}]}
guimgr.recent-documents = [loc('selforg.py'),
                           loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/axes/_base.py'),
                           loc('sde.py'),
                           loc('euler.py')]
guimgr.visual-state = {loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        94),
        ('Artist|0|.update|0|',
         1045)],
        'code-line': '                        raise AttributeError(f"{type(self).__name__!r} object "\r\n',
        'first-line': 1044,
        'folded-linenos': [],
        'sel-line': 1063,
        'sel-line-start': 36297,
        'selection_end': 36297,
        'selection_start': 36297,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_process_plot_var_args|0|',
        211),
        ('_process_plot_var_args|0|._plot_args|0|',
         405)],
        'code-line': '            raise ValueError(f"x and y must have same first dimension, but "\r\n',
        'first-line': 478,
        'folded-linenos': [],
        'sel-line': 497,
        'sel-line-start': 19892,
        'selection_end': 19892,
        'selection_start': 19892,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/figure.py'): {'attrib-starts': [('FigureBase|0|',
        180),
        ('FigureBase|0|.add_subplot|0|',
         646)],
        'code-line': '            ax = subplot_class_factory(projection_class)(self, *args, **pkw)\r\n',
        'first-line': 760,
        'folded-linenos': [],
        'sel-line': 771,
        'sel-line-start': 28172,
        'selection_end': 28172,
        'selection_start': 28172,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/gridspec.py'): {'attrib-starts': [('SubplotSpec|0|',
        536),
        ('SubplotSpec|0|._from_subplot_args|0|',
         567)],
        'code-line': '                raise ValueError(\r\n',
        'first-line': 586,
        'folded-linenos': [],
        'sel-line': 605,
        'sel-line-start': 24410,
        'selection_end': 24410,
        'selection_start': 24410,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [('figure|0|',
        664)],
        'code-line': '        num = int(num)  # crude validation of num argument\r\n',
        'first-line': 753,
        'folded-linenos': [],
        'sel-line': 772,
        'sel-line-start': 26102,
        'selection_end': 26102,
        'selection_start': 26102,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/core/_methods.py'): {'attrib-starts': [('_count_reduce_items|0|',
        65)],
        'code-line': '            items *= arr.shape[mu.normalize_axis_index(ax, arr.ndim)]\r\n',
        'first-line': 56,
        'folded-linenos': [],
        'sel-line': 75,
        'sel-line-start': 2871,
        'selection_end': 2871,
        'selection_start': 2871,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/core/fromnumeric.py'): {'attrib-starts': [('size|0|',
        3169)],
        'code-line': '            return asarray(a).shape[axis]\r\n',
        'first-line': 3193,
        'folded-linenos': [],
        'sel-line': 3212,
        'sel-line-start': 106403,
        'selection_end': 106403,
        'selection_start': 106403,
        'zoom': 0},
                       loc('../dynamics/chaos_book/wk1/Rossler.py'): {'attrib-starts': [('Velocity|0|',
        14)],
        'code-line': '\r\n',
        'first-line': 30,
        'folded-linenos': [],
        'sel-line': 39,
        'sel-line-start': 1029,
        'selection_end': 1029,
        'selection_start': 1029,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'sde.py|Euler–Maruyama method\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 464,
        'selection_end': 494,
        'selection_start': 494,
        'zoom': 0},
                       loc('Rossler.py'): {'attrib-starts': [],
        'code-line': '    xt = sspSolution[:, 0]\r\n',
        'first-line': 49,
        'folded-linenos': [],
        'sel-line': 54,
        'sel-line-start': 1585,
        'selection_end': 1585,
        'selection_start': 1585,
        'zoom': 0},
                       loc('RungeKutta.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('compare.py'): {'attrib-starts': [],
        'code-line': 't = np.arange(0.0, 40.0, 0.001)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 494,
        'selection_end': 523,
        'selection_start': 523,
        'zoom': 0},
                       loc('euler.py'): {'attrib-starts': [('euler|0|',
        22)],
        'code-line': '    y[0, :] = y0\r\n',
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 922,
        'selection_end': 938,
        'selection_start': 938,
        'zoom': 0},
                       loc('rk4.py'): {'attrib-starts': [],
                                       'code-line': '#!/usr/bin/env python\r\n',
                                       'first-line': 62,
                                       'folded-linenos': [],
                                       'sel-line': 0,
                                       'sel-line-start': 0,
                                       'selection_end': 0,
                                       'selection_start': 0,
                                       'zoom': 0},
                       loc('sde.py'): {'attrib-starts': [],
                                       'code-line': "'''Euler–Maruyama method'''\r\n",
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 10,
                                       'sel-line-start': 496,
                                       'selection_end': 522,
                                       'selection_start': 499,
                                       'zoom': 0},
                       loc('selforg.py'): {'attrib-starts': [('Population|0|',
        63)],
        'code-line': '    def Velocity(self,y,t):                     #FIXME\r\n',
        'first-line': 64,
        'folded-linenos': [],
        'sel-line': 75,
        'sel-line-start': 2488,
        'selection_end': 2504,
        'selection_start': 2496,
        'zoom': 0}}
search.replace-history = ['dt',
                          'func',
                          't',
                          'y']
search.search-history = ['"',
                         'deltat',
                         'velocityFunction',
                         'timeArray',
                         'SolutionArray']
